#! /usr/bin/env python

PACKAGE='prosilica_camera'
import roslib; roslib.load_manifest(PACKAGE)

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# @todo Think about levels. Setting most of these to STOP to guarantee atomicity.
mode_enum = gen.enum( [ gen.const("StreamingMode", str_t, "streaming", "Streaming mode"),
                        gen.const("PolledMode", str_t, "polled", "Polled mode") ], "Enum to set the mode.")
#       Name                 Type      Reconfiguration level             Description   Default   Min   Max
gen.add("trigger_mode",      str_t,    SensorLevels.RECONFIGURE_STOP,    "Camera mode (streaming vs. polled)", "streaming", edit_method = mode_enum)
gen.add("auto_exposure",     bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Sets the camera exposure duration to automatic. Causes the @b exposure setting to be ignored.", True)
gen.add("exposure",          double_t, SensorLevels.RECONFIGURE_RUNNING, "Camera exposure time in seconds.", 0.025, 0.000025, 60.0)
gen.add("auto_gain",         bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Sets the analog gain to automatic. Causes the @b gain setting to be ignored.", True)
gen.add("gain",              int_t,    SensorLevels.RECONFIGURE_RUNNING, "The gain level in dB.", 0, 0, 24)
gen.add("auto_whitebalance", bool_t,   SensorLevels.RECONFIGURE_RUNNING, "Whether whitebalance will continuously adjust to the current scene. Causes the @b whitebalance_red and @b whitebalance_blue settings to be ignored.", True)
gen.add("whitebalance_red",  int_t,    SensorLevels.RECONFIGURE_RUNNING, "Red gain as a percentage of the camera default setting.", 100, 80, 300)
gen.add("whitebalance_blue", int_t,    SensorLevels.RECONFIGURE_RUNNING, "Blue gain as a percentage of the camera default setting.", 100, 80, 300)
# @todo ROI, binning...
gen.add("frame_id",          str_t,    SensorLevels.RECONFIGURE_RUNNING, "The optical camera TF frame set in message headers.", "camera")
gen.add("x_offset",          int_t,    SensorLevels.RECONFIGURE_RUNNING, "X offset of the region of interest.", 0, 0, 2447)
gen.add("y_offset",          int_t,    SensorLevels.RECONFIGURE_RUNNING, "Y offset of the region of interest.", 0, 0, 2049)
gen.add("width",             int_t,    SensorLevels.RECONFIGURE_RUNNING, "Width of the region of interest (0 for automatic).", 0, 0, 2448)
gen.add("height",            int_t,    SensorLevels.RECONFIGURE_RUNNING, "Height of the region of interest (0 for automatic).", 0, 0, 2050)

exit(gen.generate(PACKAGE, "prosilica_node", "ProsilicaCamera"))
