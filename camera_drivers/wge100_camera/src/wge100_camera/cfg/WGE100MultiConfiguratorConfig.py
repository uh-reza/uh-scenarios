## *********************************************************
## 
## File autogenerated for the wge100_camera package 
## by the dynamic_reconfigure package.
## Please do not edit.
## 
## ********************************************************/

##**********************************************************
## Software License Agreement (BSD License)
##
##  Copyright (c) 2008, Willow Garage, Inc.
##  All rights reserved.
##
##  Redistribution and use in source and binary forms, with or without
##  modification, are permitted provided that the following conditions
##  are met:
##
##   * Redistributions of source code must retain the above copyright
##     notice, this list of conditions and the following disclaimer.
##   * Redistributions in binary form must reproduce the above
##     copyright notice, this list of conditions and the following
##     disclaimer in the documentation and/or other materials provided
##     with the distribution.
##   * Neither the name of the Willow Garage nor the names of its
##     contributors may be used to endorse or promote products derived
##     from this software without specific prior written permission.
##
##  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
##  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
##  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
##  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
##  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
##  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
##  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
##  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
##  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
##  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
##  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
##  POSSIBILITY OF SUCH DAMAGE.
##**********************************************************/

config_description = [{'srcline': 44, 'description': 'Space separated list of nodes that should be controlled by this multi-configurator.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '../cfg/WGE100MultiConfigurator.cfg', 'name': 'camera_nodes', 'edit_method': '', 'default': 'wge100_camera', 'level': 3, 'min': '', 'type': 'str'}, {'srcline': 53, 'description': 'Sets the TF frame from which the camera is publishing.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'frame_id', 'edit_method': '', 'default': '', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 54, 'description': 'Select the register set to work with. In auto mode, an extra pulse on the trigger signal indicates that the alternate set should be used.', 'max': 3, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'register_set', 'edit_method': "{'enum_description': 'Some wge100 cameras have two register sets. You can chose either set, or have the trigger signal select one of the sets. The camera images will go to camera or camera_alternate depending on which register set is active.', 'enum': [{'srcline': 46, 'description': 'The primary register set is always used.', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'PrimaryRegisterSet'}, {'srcline': 47, 'description': 'The alternate register set is always used.', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'AlternateRegisterSet'}, {'srcline': 48, 'description': 'The trigger signal selects which register set to use.', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}]}", 'default': 0, 'level': 3, 'min': 0, 'type': 'int'}, {'srcline': 56, 'description': 'Number of pixels horizontally.', 'max': 752, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'width', 'edit_method': '', 'default': 640, 'level': 3, 'min': 1, 'type': 'int'}, {'srcline': 57, 'description': 'Number of pixels vertically.', 'max': 480, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'height', 'edit_method': '', 'default': 480, 'level': 3, 'min': 1, 'type': 'int'}, {'srcline': 58, 'description': 'Number of pixels to bin together horizontally.', 'max': 4, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'horizontal_binning', 'edit_method': '', 'default': 1, 'level': 3, 'min': 1, 'type': 'int'}, {'srcline': 59, 'description': 'Number of pixels to bin together vertically.', 'max': 4, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'vertical_binning', 'edit_method': '', 'default': 1, 'level': 3, 'min': 1, 'type': 'int'}, {'srcline': 60, 'description': 'Horizontal offset between the center of the image and the center of the imager in pixels.', 'max': 376, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'horizontal_offset', 'edit_method': '', 'default': 0, 'level': 3, 'min': -376, 'type': 'int'}, {'srcline': 61, 'description': 'Vertical offset between the center of the image and the center of the imager in pixels.', 'max': 240, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'vertical_offset', 'edit_method': '', 'default': 0, 'level': 3, 'min': -240, 'type': 'int'}, {'srcline': 62, 'description': 'Mirrors the image left to right.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'mirror_x', 'edit_method': '', 'default': False, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 63, 'description': 'Mirrors the image top to bottom.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'mirror_y', 'edit_method': '', 'default': False, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 64, 'description': 'Rotates the image 180 degrees. Acts in addition to the mirorr parameters', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'rotate_180', 'edit_method': '', 'default': False, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 66, 'description': 'Sets the frame rate of the imager. In externally triggered mode this must be more than trig_rate', 'max': 100.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'imager_rate', 'edit_method': '', 'default': 30.0, 'level': 3, 'min': 1.0, 'type': 'double'}, {'srcline': 67, 'description': 'Set camera to trigger from the external trigger input.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'ext_trig', 'edit_method': '', 'default': False, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 68, 'description': 'Indicates that the camera should trigger on rising edges (as opposed to falling edges).', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'rising_edge_trig', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 69, 'description': 'Sets the topic from which an externally trigged camera receives its trigger timestamps.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'trig_timestamp_topic', 'edit_method': '', 'default': '', 'level': 3, 'min': '', 'type': 'str'}, {'srcline': 70, 'description': 'Sets the expected triggering rate in externally triggered mode.', 'max': 100.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'trig_rate', 'edit_method': '', 'default': 30.0, 'level': 3, 'min': 1.0, 'type': 'double'}, {'srcline': 71, 'description': 'Offset between the end of exposure and the minimal arrival time for the first frame packet. Only used when using internal triggering.', 'max': 0.02, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'first_packet_offset', 'edit_method': '', 'default': 0.0025000000000000001, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 73, 'description': 'The camera brightness for automatic gain/exposure.', 'max': 64, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'brightness', 'edit_method': '', 'default': 58, 'level': 3, 'min': 1, 'type': 'int'}, {'srcline': 74, 'description': 'Enables the automatic black-level detection.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'auto_black_level', 'edit_method': '', 'default': False, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 75, 'description': 'Base 2 logarithm of the number of frames the black-level algorithm should average over.', 'max': 7, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'black_level_filter_length', 'edit_method': '', 'default': 4, 'level': 3, 'min': 0, 'type': 'int'}, {'srcline': 76, 'description': 'Maximum per-frame change in the auto black-level.', 'max': 31, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'black_level_step_size', 'edit_method': '', 'default': 2, 'level': 3, 'min': 0, 'type': 'int'}, {'srcline': 77, 'description': 'Sets the black level.', 'max': 127, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'black_level', 'edit_method': '', 'default': 0, 'level': 3, 'min': -127, 'type': 'int'}, {'srcline': 78, 'description': 'Maximum exposure time in seconds in automatic exposure mode. Zero for automatic.', 'max': 0.10000000000000001, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'max_exposure', 'edit_method': '', 'default': 0.0, 'level': 3, 'min': 0.0, 'type': 'double'}, {'srcline': 80, 'description': 'Sets the camera exposure duration to automatic. Causes the exposure setting to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'auto_exposure', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 81, 'description': 'Maximum camera exposure time in seconds. The valid range depends on the video mode.', 'max': 0.10000000000000001, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'exposure', 'edit_method': '', 'default': 0.01, 'level': 3, 'min': 0.0, 'type': 'double'}, {'srcline': 82, 'description': 'Sets the analog gain to automatic. Causes the gain setting to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'auto_gain', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 83, 'description': 'The camera analog gain.', 'max': 127, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'gain', 'edit_method': '', 'default': 32, 'level': 3, 'min': 16, 'type': 'int'}, {'srcline': 84, 'description': 'Turns on companding (a non-linear intensity scaling to improve sensitivity in dark areas).', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'companding', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 86, 'description': 'Sets the alternate camera exposure duration to automatic. Causes the exposure_alternate setting to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'auto_exposure_alternate', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 87, 'description': 'Alternate camera exposure in seconds. The valid range depends on the video mode.', 'max': 0.10000000000000001, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'exposure_alternate', 'edit_method': '', 'default': 0.01, 'level': 3, 'min': 0.0, 'type': 'double'}, {'srcline': 88, 'description': 'Sets the alternate analog gain to automatic. Causes the gain_alternate setting to be ignored.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'auto_gain_alternate', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 89, 'description': 'The alternate camera analog gain.', 'max': 127, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'gain_alternate', 'edit_method': '', 'default': 32, 'level': 3, 'min': 16, 'type': 'int'}, {'srcline': 90, 'description': 'Turns on companding for the alternate imager register set.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'companding_alternate', 'edit_method': '', 'default': True, 'level': 3, 'min': False, 'type': 'bool'}, {'srcline': 91, 'description': "Turns on the camera's test pattern.", 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'name': 'test_pattern', 'edit_method': '', 'default': False, 'level': 3, 'min': False, 'type': 'bool'}]

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

for param in config_description:
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

WGE100MultiConfigurator_PrimaryRegisterSet = 0
WGE100MultiConfigurator_AlternateRegisterSet = 1
WGE100MultiConfigurator_Auto = 2
