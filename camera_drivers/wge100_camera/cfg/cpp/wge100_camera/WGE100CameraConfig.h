//#line 2 "/opt/ros/cturtle/stacks/driver_common/dynamic_reconfigure/templates/ConfigType.h"
// *********************************************************
// 
// File autogenerated for the wge100_camera package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

/***********************************************************
 * Software License Agreement (BSD License)
 *
 *  Copyright (c) 2008, Willow Garage, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *   * Neither the name of the Willow Garage nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 ***********************************************************/

// Author: Blaise Gassend


#ifndef __wge100_camera__WGE100CAMERACONFIG_H__
#define __wge100_camera__WGE100CAMERACONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/config_init_mutex.h>

namespace wge100_camera
{
  class WGE100CameraConfigStatics;
  
  class WGE100CameraConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(WGE100CameraConfig &config, const WGE100CameraConfig &max, const WGE100CameraConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const WGE100CameraConfig &config1, const WGE100CameraConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, WGE100CameraConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const WGE100CameraConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, WGE100CameraConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const WGE100CameraConfig &config) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T WGE100CameraConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (WGE100CameraConfig::* field);

      virtual void clamp(WGE100CameraConfig &config, const WGE100CameraConfig &max, const WGE100CameraConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const WGE100CameraConfig &config1, const WGE100CameraConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, WGE100CameraConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const WGE100CameraConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, WGE100CameraConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const WGE100CameraConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }
    };

//#line 46 "../cfg/WGE100Camera.cfg"
      std::string camera_url;
//#line 53 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      std::string frame_id;
//#line 54 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int register_set;
//#line 56 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int width;
//#line 57 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int height;
//#line 58 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int horizontal_binning;
//#line 59 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int vertical_binning;
//#line 60 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int horizontal_offset;
//#line 61 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int vertical_offset;
//#line 62 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool mirror_x;
//#line 63 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool mirror_y;
//#line 64 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool rotate_180;
//#line 66 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      double imager_rate;
//#line 67 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool ext_trig;
//#line 68 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool rising_edge_trig;
//#line 69 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      std::string trig_timestamp_topic;
//#line 70 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      double trig_rate;
//#line 71 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      double first_packet_offset;
//#line 73 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int brightness;
//#line 74 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool auto_black_level;
//#line 75 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int black_level_filter_length;
//#line 76 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int black_level_step_size;
//#line 77 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int black_level;
//#line 78 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      double max_exposure;
//#line 80 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool auto_exposure;
//#line 81 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      double exposure;
//#line 82 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool auto_gain;
//#line 83 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int gain;
//#line 84 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool companding;
//#line 86 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool auto_exposure_alternate;
//#line 87 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      double exposure_alternate;
//#line 88 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool auto_gain_alternate;
//#line 89 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      int gain_alternate;
//#line 90 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool companding_alternate;
//#line 91 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      bool test_pattern;
//#line 138 "/opt/ros/cturtle/stacks/driver_common/dynamic_reconfigure/templates/ConfigType.h"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        if ((*i)->fromMessage(msg, *this))
          count++;
      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("WGE100CameraConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toMessage(msg, *this);
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      __toMessage__(msg, __param_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->fromServer(nh, *this);
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const WGE100CameraConfig &__max__ = __getMax__();
      const WGE100CameraConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const WGE100CameraConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const WGE100CameraConfig &__getDefault__();
    static const WGE100CameraConfig &__getMax__();
    static const WGE100CameraConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    
  private:
    static const WGE100CameraConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void WGE100CameraConfig::ParamDescription<std::string>::clamp(WGE100CameraConfig &config, const WGE100CameraConfig &max, const WGE100CameraConfig &min) const
  {
    return;
  }

  class WGE100CameraConfigStatics
  {
    friend class WGE100CameraConfig;
    
    WGE100CameraConfigStatics()
    {
//#line 46 "../cfg/WGE100Camera.cfg"
      __min__.camera_url = "";
//#line 46 "../cfg/WGE100Camera.cfg"
      __max__.camera_url = "";
//#line 46 "../cfg/WGE100Camera.cfg"
      __default__.camera_url = "any://";
//#line 46 "../cfg/WGE100Camera.cfg"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<std::string>("camera_url", "str", 3, "URL defining which camera to connect to, on what interface and with which IP address.", "", &WGE100CameraConfig::camera_url)));
//#line 53 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.frame_id = "";
//#line 53 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.frame_id = "";
//#line 53 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.frame_id = "";
//#line 53 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<std::string>("frame_id", "str", 0, "Sets the TF frame from which the camera is publishing.", "", &WGE100CameraConfig::frame_id)));
//#line 54 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.register_set = 0;
//#line 54 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.register_set = 3;
//#line 54 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.register_set = 0;
//#line 54 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("register_set", "int", 3, "Select the register set to work with. In auto mode, an extra pulse on the trigger signal indicates that the alternate set should be used.", "{'enum_description': 'Some wge100 cameras have two register sets. You can chose either set, or have the trigger signal select one of the sets. The camera images will go to camera or camera_alternate depending on which register set is active.', 'enum': [{'srcline': 46, 'description': 'The primary register set is always used.', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'PrimaryRegisterSet'}, {'srcline': 47, 'description': 'The alternate register set is always used.', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'AlternateRegisterSet'}, {'srcline': 48, 'description': 'The trigger signal selects which register set to use.', 'srcfile': '/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}]}", &WGE100CameraConfig::register_set)));
//#line 56 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.width = 1;
//#line 56 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.width = 752;
//#line 56 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.width = 640;
//#line 56 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("width", "int", 3, "Number of pixels horizontally.", "", &WGE100CameraConfig::width)));
//#line 57 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.height = 1;
//#line 57 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.height = 480;
//#line 57 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.height = 480;
//#line 57 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("height", "int", 3, "Number of pixels vertically.", "", &WGE100CameraConfig::height)));
//#line 58 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.horizontal_binning = 1;
//#line 58 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.horizontal_binning = 4;
//#line 58 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.horizontal_binning = 1;
//#line 58 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("horizontal_binning", "int", 3, "Number of pixels to bin together horizontally.", "", &WGE100CameraConfig::horizontal_binning)));
//#line 59 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.vertical_binning = 1;
//#line 59 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.vertical_binning = 4;
//#line 59 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.vertical_binning = 1;
//#line 59 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("vertical_binning", "int", 3, "Number of pixels to bin together vertically.", "", &WGE100CameraConfig::vertical_binning)));
//#line 60 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.horizontal_offset = -376;
//#line 60 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.horizontal_offset = 376;
//#line 60 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.horizontal_offset = 0;
//#line 60 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("horizontal_offset", "int", 3, "Horizontal offset between the center of the image and the center of the imager in pixels.", "", &WGE100CameraConfig::horizontal_offset)));
//#line 61 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.vertical_offset = -240;
//#line 61 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.vertical_offset = 240;
//#line 61 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.vertical_offset = 0;
//#line 61 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("vertical_offset", "int", 3, "Vertical offset between the center of the image and the center of the imager in pixels.", "", &WGE100CameraConfig::vertical_offset)));
//#line 62 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.mirror_x = 0;
//#line 62 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.mirror_x = 1;
//#line 62 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.mirror_x = 0;
//#line 62 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("mirror_x", "bool", 3, "Mirrors the image left to right.", "", &WGE100CameraConfig::mirror_x)));
//#line 63 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.mirror_y = 0;
//#line 63 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.mirror_y = 1;
//#line 63 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.mirror_y = 0;
//#line 63 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("mirror_y", "bool", 3, "Mirrors the image top to bottom.", "", &WGE100CameraConfig::mirror_y)));
//#line 64 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.rotate_180 = 0;
//#line 64 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.rotate_180 = 1;
//#line 64 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.rotate_180 = 0;
//#line 64 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("rotate_180", "bool", 3, "Rotates the image 180 degrees. Acts in addition to the mirorr parameters", "", &WGE100CameraConfig::rotate_180)));
//#line 66 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.imager_rate = 1.0;
//#line 66 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.imager_rate = 100.0;
//#line 66 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.imager_rate = 30.0;
//#line 66 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<double>("imager_rate", "double", 3, "Sets the frame rate of the imager. In externally triggered mode this must be more than trig_rate", "", &WGE100CameraConfig::imager_rate)));
//#line 67 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.ext_trig = 0;
//#line 67 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.ext_trig = 1;
//#line 67 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.ext_trig = 0;
//#line 67 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("ext_trig", "bool", 3, "Set camera to trigger from the external trigger input.", "", &WGE100CameraConfig::ext_trig)));
//#line 68 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.rising_edge_trig = 0;
//#line 68 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.rising_edge_trig = 1;
//#line 68 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.rising_edge_trig = 1;
//#line 68 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("rising_edge_trig", "bool", 3, "Indicates that the camera should trigger on rising edges (as opposed to falling edges).", "", &WGE100CameraConfig::rising_edge_trig)));
//#line 69 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.trig_timestamp_topic = "";
//#line 69 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.trig_timestamp_topic = "";
//#line 69 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.trig_timestamp_topic = "";
//#line 69 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<std::string>("trig_timestamp_topic", "str", 3, "Sets the topic from which an externally trigged camera receives its trigger timestamps.", "", &WGE100CameraConfig::trig_timestamp_topic)));
//#line 70 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.trig_rate = 1.0;
//#line 70 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.trig_rate = 100.0;
//#line 70 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.trig_rate = 30.0;
//#line 70 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<double>("trig_rate", "double", 3, "Sets the expected triggering rate in externally triggered mode.", "", &WGE100CameraConfig::trig_rate)));
//#line 71 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.first_packet_offset = 0.0;
//#line 71 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.first_packet_offset = 0.02;
//#line 71 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.first_packet_offset = 0.0025;
//#line 71 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<double>("first_packet_offset", "double", 0, "Offset between the end of exposure and the minimal arrival time for the first frame packet. Only used when using internal triggering.", "", &WGE100CameraConfig::first_packet_offset)));
//#line 73 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.brightness = 1;
//#line 73 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.brightness = 64;
//#line 73 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.brightness = 58;
//#line 73 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("brightness", "int", 3, "The camera brightness for automatic gain/exposure.", "", &WGE100CameraConfig::brightness)));
//#line 74 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.auto_black_level = 0;
//#line 74 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.auto_black_level = 1;
//#line 74 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.auto_black_level = 0;
//#line 74 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("auto_black_level", "bool", 3, "Enables the automatic black-level detection.", "", &WGE100CameraConfig::auto_black_level)));
//#line 75 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.black_level_filter_length = 0;
//#line 75 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.black_level_filter_length = 7;
//#line 75 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.black_level_filter_length = 4;
//#line 75 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("black_level_filter_length", "int", 3, "Base 2 logarithm of the number of frames the black-level algorithm should average over.", "", &WGE100CameraConfig::black_level_filter_length)));
//#line 76 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.black_level_step_size = 0;
//#line 76 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.black_level_step_size = 31;
//#line 76 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.black_level_step_size = 2;
//#line 76 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("black_level_step_size", "int", 3, "Maximum per-frame change in the auto black-level.", "", &WGE100CameraConfig::black_level_step_size)));
//#line 77 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.black_level = -127;
//#line 77 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.black_level = 127;
//#line 77 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.black_level = 0;
//#line 77 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("black_level", "int", 3, "Sets the black level.", "", &WGE100CameraConfig::black_level)));
//#line 78 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.max_exposure = 0.0;
//#line 78 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.max_exposure = 0.1;
//#line 78 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.max_exposure = 0.0;
//#line 78 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<double>("max_exposure", "double", 3, "Maximum exposure time in seconds in automatic exposure mode. Zero for automatic.", "", &WGE100CameraConfig::max_exposure)));
//#line 80 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.auto_exposure = 0;
//#line 80 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.auto_exposure = 1;
//#line 80 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.auto_exposure = 1;
//#line 80 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("auto_exposure", "bool", 3, "Sets the camera exposure duration to automatic. Causes the exposure setting to be ignored.", "", &WGE100CameraConfig::auto_exposure)));
//#line 81 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.exposure = 0.0;
//#line 81 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.exposure = 0.1;
//#line 81 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.exposure = 0.01;
//#line 81 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<double>("exposure", "double", 3, "Maximum camera exposure time in seconds. The valid range depends on the video mode.", "", &WGE100CameraConfig::exposure)));
//#line 82 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.auto_gain = 0;
//#line 82 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.auto_gain = 1;
//#line 82 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.auto_gain = 1;
//#line 82 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("auto_gain", "bool", 3, "Sets the analog gain to automatic. Causes the gain setting to be ignored.", "", &WGE100CameraConfig::auto_gain)));
//#line 83 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.gain = 16;
//#line 83 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.gain = 127;
//#line 83 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.gain = 32;
//#line 83 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("gain", "int", 3, "The camera analog gain.", "", &WGE100CameraConfig::gain)));
//#line 84 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.companding = 0;
//#line 84 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.companding = 1;
//#line 84 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.companding = 1;
//#line 84 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("companding", "bool", 3, "Turns on companding (a non-linear intensity scaling to improve sensitivity in dark areas).", "", &WGE100CameraConfig::companding)));
//#line 86 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.auto_exposure_alternate = 0;
//#line 86 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.auto_exposure_alternate = 1;
//#line 86 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.auto_exposure_alternate = 1;
//#line 86 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("auto_exposure_alternate", "bool", 3, "Sets the alternate camera exposure duration to automatic. Causes the exposure_alternate setting to be ignored.", "", &WGE100CameraConfig::auto_exposure_alternate)));
//#line 87 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.exposure_alternate = 0.0;
//#line 87 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.exposure_alternate = 0.1;
//#line 87 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.exposure_alternate = 0.01;
//#line 87 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<double>("exposure_alternate", "double", 3, "Alternate camera exposure in seconds. The valid range depends on the video mode.", "", &WGE100CameraConfig::exposure_alternate)));
//#line 88 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.auto_gain_alternate = 0;
//#line 88 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.auto_gain_alternate = 1;
//#line 88 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.auto_gain_alternate = 1;
//#line 88 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("auto_gain_alternate", "bool", 3, "Sets the alternate analog gain to automatic. Causes the gain_alternate setting to be ignored.", "", &WGE100CameraConfig::auto_gain_alternate)));
//#line 89 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.gain_alternate = 16;
//#line 89 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.gain_alternate = 127;
//#line 89 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.gain_alternate = 32;
//#line 89 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<int>("gain_alternate", "int", 3, "The alternate camera analog gain.", "", &WGE100CameraConfig::gain_alternate)));
//#line 90 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.companding_alternate = 0;
//#line 90 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.companding_alternate = 1;
//#line 90 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.companding_alternate = 1;
//#line 90 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("companding_alternate", "bool", 3, "Turns on companding for the alternate imager register set.", "", &WGE100CameraConfig::companding_alternate)));
//#line 91 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __min__.test_pattern = 0;
//#line 91 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __max__.test_pattern = 1;
//#line 91 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __default__.test_pattern = 0;
//#line 91 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      __param_descriptions__.push_back(WGE100CameraConfig::AbstractParamDescriptionConstPtr(new WGE100CameraConfig::ParamDescription<bool>("test_pattern", "bool", 3, "Turns on the camera's test pattern.", "", &WGE100CameraConfig::test_pattern)));
//#line 239 "/opt/ros/cturtle/stacks/driver_common/dynamic_reconfigure/templates/ConfigType.h"
    
      for (std::vector<WGE100CameraConfig::AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        __description_message__.parameters.push_back(**i);
      __max__.__toMessage__(__description_message__.max, __param_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__); 
    }
    std::vector<WGE100CameraConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    WGE100CameraConfig __max__;
    WGE100CameraConfig __min__;
    WGE100CameraConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;
    static const WGE100CameraConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static WGE100CameraConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &WGE100CameraConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const WGE100CameraConfig &WGE100CameraConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const WGE100CameraConfig &WGE100CameraConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const WGE100CameraConfig &WGE100CameraConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<WGE100CameraConfig::AbstractParamDescriptionConstPtr> &WGE100CameraConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const WGE100CameraConfigStatics *WGE100CameraConfig::__get_statics__()
  {
    const static WGE100CameraConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = WGE100CameraConfigStatics::get_instance();
    
    return statics;
  }

//#line 46 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      const int WGE100Camera_PrimaryRegisterSet = 0;
//#line 47 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      const int WGE100Camera_AlternateRegisterSet = 1;
//#line 48 "/tmp/buildd/ros-cturtle-camera-drivers-1.2.7/debian/ros-cturtle-camera-drivers/opt/ros/cturtle/stacks/camera_drivers/wge100_camera/cfg/common_parameters.py"
      const int WGE100Camera_Auto = 2;
}

#endif // __WGE100CAMERARECONFIGURATOR_H__
